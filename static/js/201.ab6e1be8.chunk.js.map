{"version":3,"file":"static/js/201.ab6e1be8.chunk.js","mappings":"kLACA,EAAoC,oCAApC,EAA4F,oCAA5F,EAA4J,4CAA5J,EAAyO,iDAAzO,EAAiU,uDAAjU,EAAqZ,6CAArZ,EAAse,oD,mGCoFte,EAnE2BA,EAAAA,MAAW,WAElC,IACIC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACTC,GAAmBC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMC,SAASH,WACpEG,GAA0CF,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMC,SAASA,YAC3FC,GAAyBH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAsBA,EAAMC,SAASC,kBAExEC,EAASP,EAAOO,OAASC,SAASR,EAAOO,OAAQ,IAAM,GAE7DE,EAAAA,EAAAA,YAAU,WACNX,GAASY,EAAAA,EAAAA,SACV,IAEH,IAAMC,EAAmBT,EAAQU,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOP,KAC9CQ,GAAOC,EAAAA,EAAAA,cAAY,kBAAMlB,GAASmB,EAAAA,EAAAA,IAAYV,MAAU,CAACA,IACzDW,GAAWF,EAAAA,EAAAA,cAAY,SAACG,GAAD,OAAmBrB,GAASsB,EAAAA,EAAAA,IAAqBD,MAAS,IACjFE,GAASL,EAAAA,EAAAA,cAAY,SAACM,GAAD,OAAuBxB,GAASyB,EAAAA,EAAAA,IAAchB,EAAQe,MAAa,CAACf,IAE/F,OACI,SAACiB,EAAA,EAAD,UACMtB,GAEI,gBAAKuB,UAAWC,EAAhB,UACE,iBAAKD,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKxB,EAAQyB,KAAI,SAAAC,GACT,OAAO,SAAC,KAAD,CACSH,UAAW,qBAAEI,SACPH,EACAA,GACNI,GAAE,oBAAeF,EAAEd,IAJ5B,SAKLc,EAAEG,MALiBH,EAAEd,UAQ/B,iBAAKW,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKnB,GAAUF,EAASE,GACdF,EAASE,GAAQoB,KAAI,SAAAK,GACnB,OAAO,4BACH,2BAAM,yBAAIA,EAAEC,SACN,WACAtB,GAAoBA,EAAiBoB,KAFrC,WAIN,0BAAOC,EAAEE,WACT,iBAAMC,QAAS,kBAAMd,EAAOW,EAAElB,KAA9B,UACI,SAACsB,EAAA,EAAD,QAPSJ,EAAElB,OAWrB,mCAEV,SAACuB,EAAA,EAAD,CAAelB,MAAOb,EACPgC,MAAO,eACPC,MAAO,cACPrB,SAAUA,EACVH,KAAMA,aAlC/B,SAACyB,EAAA,EAAD","sources":["webpack://social-network/./src/pages/messages/Messages.module.css?ee32","pages/messages/Messages.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages__wrapper\":\"Messages_messages__wrapper__wQM28\",\"messages__dialogs\":\"Messages_messages__dialogs__v9Ede\",\"messages__dialogs_friends\":\"Messages_messages__dialogs_friends__Me6iQ\",\"messages__dialogs_friends_link\":\"Messages_messages__dialogs_friends_link__E9eJ7\",\"messages__dialogs_friends_activeLink\":\"Messages_messages__dialogs_friends_activeLink__3J0dS\",\"messages__dialogs_messages\":\"Messages_messages__dialogs_messages__LsOPv\",\"messages__dialogs_messages_window\":\"Messages_messages__dialogs_messages_window__ZiXaJ\"};","import React, {useCallback, useEffect} from 'react'\r\nimport styles from './Messages.module.css'\r\nimport {WithAuth} from '../../auxiliary-components/WithAuth'\r\nimport {Preloader} from '../../components/preloader/Preloader'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {TAppState} from '../../state/store'\r\nimport {IUser} from '../../api/api'\r\nimport {NavLink, useParams} from 'react-router-dom'\r\nimport {EnterTextForm} from '../../components/enter-text-form/EnterTextForm'\r\nimport {DeleteOutlined} from '@ant-design/icons'\r\nimport {\r\n    changeNewMessageArea,\r\n    IMessage,\r\n    removeMessage,\r\n    sendMessage,\r\n    setFriends\r\n} from '../../state/reducers/messages-reducer'\r\n\r\nconst Messages: React.FC = React.memo(() => {\r\n\r\n    const\r\n        dispatch = useDispatch(),\r\n        params = useParams(),\r\n        friends: IUser[] = useSelector((state: TAppState) => state.messages.friends),\r\n        messages: { [key: number]: IMessage[] } = useSelector((state: TAppState) => state.messages.messages),\r\n        newMessageText: string = useSelector((state: TAppState) => state.messages.newMessageText)\r\n\r\n    const userId = params.userId ? parseInt(params.userId, 10) : 0\r\n\r\n    useEffect(() => {\r\n        dispatch(setFriends())\r\n    }, [])\r\n\r\n    const interlocutorName = friends.find(i => i.id === userId)\r\n    const send = useCallback(() => dispatch(sendMessage(userId)), [userId])\r\n    const onChange = useCallback((value: string) => dispatch(changeNewMessageArea(value)), [])\r\n    const remove = useCallback((messageId: number) => dispatch(removeMessage(userId, messageId)), [userId])\r\n\r\n    return (\r\n        <WithAuth>\r\n            {!friends\r\n                ? <Preloader/>\r\n                : <div className={styles.messages__wrapper}>\r\n                    <div className={styles.messages__dialogs}>\r\n                        <div className={styles.messages__dialogs_friends}>\r\n                            {friends.map(f => {\r\n                                return <NavLink key={f.id}\r\n                                                className={({isActive}) => isActive\r\n                                                    ? styles.messages__dialogs_friends_activeLink\r\n                                                    : styles.messages__dialogs_friends_link}\r\n                                                to={`/messages/${f.id}`}\r\n                                >{f.name}</NavLink>\r\n                            })}\r\n                        </div>\r\n                        <div className={styles.messages__dialogs_messages}>\r\n                            <div className={styles.messages__dialogs_messages_window}>\r\n                                {userId && messages[userId]\r\n                                    ? messages[userId].map(m => {\r\n                                        return <div key={m.id}>\r\n                                            <span><b>{m.outgoing\r\n                                                ? 'BDmitriy'\r\n                                                : interlocutorName && interlocutorName.name\r\n                                            }: </b></span>\r\n                                            <span>{m.message}</span>\r\n                                            <span onClick={() => remove(m.id)}>\r\n                                                <DeleteOutlined/>\r\n                                            </span>\r\n                                        </div>\r\n                                    })\r\n                                    : 'Select friend to start dialog'}\r\n                            </div>\r\n                            <EnterTextForm value={newMessageText}\r\n                                           title={'Send message'}\r\n                                           label={'New message'}\r\n                                           onChange={onChange}\r\n                                           send={send}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            }\r\n        </WithAuth>\r\n    )\r\n})\r\n\r\nexport default Messages"],"names":["React","dispatch","useDispatch","params","useParams","friends","useSelector","state","messages","newMessageText","userId","parseInt","useEffect","setFriends","interlocutorName","find","i","id","send","useCallback","sendMessage","onChange","value","changeNewMessageArea","remove","messageId","removeMessage","WithAuth","className","styles","map","f","isActive","to","name","m","outgoing","message","onClick","DeleteOutlined","EnterTextForm","title","label","Preloader"],"sourceRoot":""}