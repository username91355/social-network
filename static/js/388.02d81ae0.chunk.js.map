{"version":3,"file":"static/js/388.02d81ae0.chunk.js","mappings":"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","sources":["components/search/Search.tsx","components/paginator/Paginator.tsx","pages/users/user/User.tsx","pages/users/Users.tsx"],"sourcesContent":["import React from 'react'\r\nimport Search from 'antd/es/input/Search'\r\n\r\ninterface IProps {\r\n    submit: (value: string) => void\r\n}\r\n\r\nexport const SearchArea: React.FC<IProps> = React.memo(props => {\r\n\r\n    const {submit} = props\r\n\r\n    const onSearch = (data: string) => {\r\n        submit(data)\r\n    }\r\n\r\n    return (\r\n        <Search placeholder=\"*Input search user name\" onSearch={onSearch} enterButton />\r\n    )\r\n})","import React, {useState} from 'react'\r\nimport {Pagination} from 'antd'\r\n\r\ninterface IProps {\r\n    portionSize: number\r\n    totalUsers: number\r\n    changeCurrentPage: (page:number) => void\r\n}\r\n\r\nexport const Paginator: React.FC<IProps> = React.memo(props => {\r\n\r\n    const {\r\n        portionSize,\r\n        totalUsers,\r\n        changeCurrentPage\r\n    } = props\r\n\r\n    let portionCount = Math.ceil(totalUsers / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n\r\n    const onChange = (page: number) => {\r\n        changeCurrentPage(page)\r\n        setPortionNumber(page)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Pagination defaultCurrent={portionNumber}\r\n                        total={portionCount}\r\n                        onChange={onChange}\r\n                        showSizeChanger={false} />\r\n        </div>\r\n    )\r\n})","import {IUser} from '../../../api/api'\r\nimport React, { useCallback } from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {subscribeToUser, unsubscribeFromUser} from '../../../state/reducers/users-reducer'\r\nimport {Button, Card, Skeleton} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\nimport {EditOutlined, UserOutlined} from '@ant-design/icons/lib/icons'\r\nimport Meta from 'antd/lib/card/Meta'\r\nimport Avatar from 'antd/lib/avatar/avatar'\r\n\r\ninterface IUserProps extends IUser {\r\n    subscriptionProcess: number[]\r\n    isLoaded: boolean\r\n}\r\n\r\nexport const User: React.FC<IUserProps> = React.memo(props => {\r\n\r\n    const {\r\n        id,\r\n        name,\r\n        status,\r\n        photos,\r\n        followed,\r\n        subscriptionProcess,\r\n        isLoaded\r\n    } = props\r\n\r\n    const dispatch = useDispatch()\r\n    const isDisabled = subscriptionProcess.some(i => i === id)\r\n\r\n    const subscribe = useCallback(() => {\r\n        dispatch(subscribeToUser(id))\r\n    },[])\r\n\r\n    const unsubscribe = useCallback(() => {\r\n        dispatch(unsubscribeFromUser(id))\r\n    },[])\r\n\r\n    return (\r\n        <div style={{width: '100%'}}>\r\n            <Card style={{margin: '10px 0'}}\r\n                  actions={[\r\n                      <Link to={`/profile/${id}`}>Profile<UserOutlined/></Link>,\r\n                      <EditOutlined key=\"edit\"/>,\r\n                      <>\r\n                          {\r\n                              followed\r\n                                  ? <Button onClick={unsubscribe} disabled={isDisabled}>Unsubscribe</Button>\r\n                                  : <Button onClick={subscribe} disabled={isDisabled}>Subscribe</Button>\r\n                          }\r\n                      </>\r\n                  ]}\r\n            >\r\n                <Skeleton loading={!isLoaded} avatar active>\r\n                    <Meta\r\n                        avatar={<Avatar src={photos.small || \"https://joeschmoe.io/api/v1/random\"}/>}\r\n                        title={name}\r\n                        description={status || '...'}\r\n                    />\r\n                </Skeleton>\r\n            </Card>\r\n        </div>\r\n    )\r\n})","import React, {useCallback, useEffect} from 'react'\r\nimport {WithAuth} from '../../auxiliary-components/WithAuth'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {getUsers} from '../../state/reducers/users-reducer'\r\nimport {TAppState} from '../../state/store'\r\nimport {SearchArea} from '../../components/search/Search'\r\nimport {Radio, RadioChangeEvent} from 'antd'\r\nimport {Preloader} from '../../components/preloader/Preloader'\r\nimport {Paginator} from '../../components/paginator/Paginator'\r\nimport {User} from './user/User'\r\n\r\nconst Users = React.memo(() => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {page, count, term, friend, subscriptionProcess} = useSelector((state: TAppState) => state.users)\r\n    const totalCount = useSelector((state: TAppState) => state.users.totalCount)\r\n    const users = useSelector((state: TAppState) => state.users.users)\r\n\r\n    useEffect(() => {\r\n        dispatch(getUsers(page, count, term, friend))\r\n    }, [dispatch])\r\n\r\n    const setCountValue = useCallback((count: number) => {\r\n        dispatch(getUsers(page, count, term, friend))\r\n    }, [dispatch])\r\n\r\n    const setSearchValue = useCallback((term: string) => {\r\n        dispatch(getUsers(page, count, term, friend))\r\n    }, [dispatch])\r\n\r\n    const setUserListFilter = useCallback((filter: boolean | null) => {\r\n        dispatch(getUsers(page, count, term, filter))\r\n    }, [dispatch])\r\n\r\n    const filterUserListHandler = useCallback((e: RadioChangeEvent) => {\r\n        if (e.target.value === 'friends') {\r\n            setUserListFilter(true)\r\n        } else if (e.target.value === 'users') {\r\n            setUserListFilter(false)\r\n        } else {\r\n            setUserListFilter(null)\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <WithAuth>\r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', padding: '10px'}}>\r\n                <SearchArea submit={setSearchValue}/>\r\n                <Radio.Group value={'default'} style={{padding: '10px 0'}}\r\n                             onChange={filterUserListHandler}>\r\n                    <Radio.Button value=\"all\">All</Radio.Button>\r\n                    <Radio.Button value=\"friends\">Friends</Radio.Button>\r\n                    <Radio.Button value=\"users\">Users</Radio.Button>\r\n                </Radio.Group>\r\n                {users.map(u => <User key={u.id} {...u} isLoaded={users !== []}\r\n                                      subscriptionProcess={subscriptionProcess}/>)}\r\n                {totalCount\r\n                    ? <Paginator totalUsers={totalCount} portionSize={page} changeCurrentPage={setCountValue}/>\r\n                    : <Preloader/>}\r\n            </div>\r\n        </WithAuth>\r\n    )\r\n})\r\n\r\nexport default Users\r\n\r\n"],"names":["SearchArea","React","props","submit","Search","placeholder","onSearch","data","enterButton","Paginator","portionSize","totalUsers","changeCurrentPage","portionCount","Math","ceil","useState","portionNumber","setPortionNumber","defaultCurrent","total","onChange","page","showSizeChanger","User","id","name","status","photos","followed","subscriptionProcess","isLoaded","dispatch","useDispatch","isDisabled","some","i","subscribe","useCallback","subscribeToUser","unsubscribe","unsubscribeFromUser","style","width","margin","actions","to","onClick","disabled","loading","avatar","active","Meta","src","small","title","description","useSelector","state","users","count","term","friend","totalCount","useEffect","getUsers","setCountValue","setSearchValue","setUserListFilter","filter","filterUserListHandler","e","target","value","WithAuth","display","flexDirection","alignItems","padding","map","u","Preloader"],"sourceRoot":""}